<?xml version='1.0' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@2.7.1">
  <actions/>
  <description>Perform system tests&#xd;
Using surefire </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.18.1">
      <projectUrl>https://github.com/mthirion/fabric-cd.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>JOLOKIA_URL</name>
          <description></description>
          <defaultValue>http://localhost:8181/jolokia</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SOAPUI_HOME</name>
          <description></description>
          <defaultValue>/redhat/platforms/test/soapui</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MOCK_NAME</name>
          <description></description>
          <defaultValue>CustomerServicesMock</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.4">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/mthirion/fabric-cd.git</url>
        <credentialsId>8b74965b-1255-41a5-ac32-09713bb05278</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/dev</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>org.redhat.integration</groupId>
    <artifactId>getCustomer</artifactId>
  </rootModule>
  <rootPOM>getCustomer/pom.xml</rootPOM>
  <goals>test -Dtest=testIntegration</goals>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>true</ignoreUpstremChanges>
  <archivingDisabled>false</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.FilePathSettingsProvider">
    <path>/redhat/platforms/dev/maven/conf/settings.xml</path>
  </settings>
  <globalSettings class="jenkins.mvn.FilePathGlobalSettingsProvider">
    <path>/redhat/platforms/dev/maven/conf/settings.xml</path>
  </globalSettings>
  <reporters/>
  <publishers/>
  <buildWrappers/>
  <prebuilders>
    <hudson.tasks.Shell>
      <command>echo &quot;temporary copying soapui files into jenkins workspace&quot;;
mkdir -p ${WORKSPACE}/src/test/resources/soapui;
cp ${WORKSPACE}/getCustomer/src/test/resources/soapui/*.xml ${WORKSPACE}/src/test/resources/soapui/
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo &quot;starting mock service&quot;;
${SOAPUI_HOME}/bin/mockservicerunner.sh -m ${MOCK_NAME} ${WORKSPACE}/src/test/resources/soapui/targetService-soapui-project.xml &amp;
echo &quot;$!&quot; &gt; ${WORKSPACE}/src/test/mock.pid</command>
    </hudson.tasks.Shell>
  </prebuilders>
  <postbuilders>
    <hudson.tasks.Shell>
      <command>echo &quot;stopping mock service&quot;;
if [[ -r ${WORKSPACE}/src/test/mock.pid ]]
then
    kill `cat ${WORKSPACE}/src/test/mock.pid`
fi
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo &quot;cleaning jenkins workspace from soapui files&quot;;
rm -rf ${WORKSPACE}/src</command>
    </hudson.tasks.Shell>
  </postbuilders>
  <runPostStepsIfResult>
    <name>FAILURE</name>
    <ordinal>2</ordinal>
    <color>RED</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
</maven2-moduleset>